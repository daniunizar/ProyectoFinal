/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package modificacionHistoricos;

import Programa.F_Base;
import registros.Registro_Merchan;
import historicos.F_Historico_Visitantes;
import auxiliares.ConexionBaseDatos;
import auxiliares.Fecha;
import configuracion.ColorInterfaz;
import historicos.F_Historico_Merchandising;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author daniu
 */
public class F_Modificar_Merchandising extends javax.swing.JFrame {

    ArrayList<String> listaMerchan;

    /**
     * Creates new form F_Modificar_Merchandising
     */
    public F_Modificar_Merchandising() {
        initComponents();
        establecerColor();
        setTitle("Centro de Investigación El Fuerte");
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelFondo = new javax.swing.JPanel();
        labelTitulo = new javax.swing.JLabel();
        panelContenedor = new javax.swing.JPanel();
        lblRef = new javax.swing.JLabel();
        label_numRef = new javax.swing.JLabel();
        lblPedido = new javax.swing.JLabel();
        spn_numPed = new javax.swing.JSpinner();
        lblFecha = new javax.swing.JLabel();
        calendar_fecha = new rojeru_san.componentes.RSDateChooser();
        lblConcepto = new javax.swing.JLabel();
        cmb_Concepto = new javax.swing.JComboBox<>();
        lblCantidad = new javax.swing.JLabel();
        spn_Cantidad = new javax.swing.JSpinner();
        lblTotal = new javax.swing.JLabel();
        spn_precioTotal = new javax.swing.JSpinner();
        btnModificar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelTitulo.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        labelTitulo.setText("Modificar Registro");

        panelContenedor.setLayout(new java.awt.GridLayout(6, 2));

        lblRef.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblRef.setText("Nº Registro:");
        panelContenedor.add(lblRef);

        label_numRef.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        label_numRef.setText("Nº Registro:");
        panelContenedor.add(label_numRef);

        lblPedido.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPedido.setText("Referencia del Pedido:");
        panelContenedor.add(lblPedido);

        spn_numPed.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        spn_numPed.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        panelContenedor.add(spn_numPed);

        lblFecha.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblFecha.setText("Fecha:");
        panelContenedor.add(lblFecha);

        calendar_fecha.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        calendar_fecha.setFormatoFecha("dd/MM/yyyy");
        calendar_fecha.setFuente(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        panelContenedor.add(calendar_fecha);

        lblConcepto.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblConcepto.setText("Concepto:");
        panelContenedor.add(lblConcepto);

        cmb_Concepto.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        cmb_Concepto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        panelContenedor.add(cmb_Concepto);

        lblCantidad.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCantidad.setText("Cantidad:");
        panelContenedor.add(lblCantidad);

        spn_Cantidad.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        spn_Cantidad.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        panelContenedor.add(spn_Cantidad);

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTotal.setText("Precio Total:");
        panelContenedor.add(lblTotal);

        spn_precioTotal.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        spn_precioTotal.setModel(new javax.swing.SpinnerNumberModel(0.0f, 0.0f, null, 1.0f));
        panelContenedor.add(spn_precioTotal);

        btnModificar.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelFondoLayout = new javax.swing.GroupLayout(panelFondo);
        panelFondo.setLayout(panelFondoLayout);
        panelFondoLayout.setHorizontalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 699, Short.MAX_VALUE)
                    .addGroup(panelFondoLayout.createSequentialGroup()
                        .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTitulo)
                            .addGroup(panelFondoLayout.createSequentialGroup()
                                .addComponent(btnModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelFondoLayout.setVerticalGroup(
            panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addGroup(panelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        int opcion = JOptionPane.showConfirmDialog(rootPane, "¿Está seguro de querer modificar el registro seleccionado?", "Aviso", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (opcion == JOptionPane.YES_OPTION) {
            ConexionBaseDatos.ConexionBaseDatos();
            Connection conexion = ConexionBaseDatos.getConnection();
            String datosActualizacion = "UPDATE REGISTRO_MERCHANDISING SET REF_PEDIDO = " + spn_numPed.getValue()
                    + ", FECHA = '" + Fecha.formateaFecha(calendar_fecha.getDatoFecha()) + "'"
                    + ", CONCEPTO = '" + (String) cmb_Concepto.getSelectedItem() + "'"
                    + ", CANTIDAD = " + spn_Cantidad.getValue()
                    + ", PRECIO_TOTAL = " + spn_precioTotal.getValue()
                    + " WHERE NUM_REF = " + Integer.parseInt(label_numRef.getText());
            System.out.println(datosActualizacion);
            PreparedStatement sentencia;
            try {
                sentencia = conexion.prepareStatement(datosActualizacion);
                sentencia.executeUpdate();
                JOptionPane.showMessageDialog(rootPane, "Registro modificado con éxito", "Información", 3);
                F_Historico_Merchandising.rellenarTabla();
            } catch (SQLException ex) {
                Logger.getLogger(F_Historico_Visitantes.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Los datos introducidos no son válidos.\nEl registro NO ha sido modificado.", "Error", 2);
            }
            ConexionBaseDatos.desconexionBaseDatos();
            dispose();
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F_Modificar_Merchandising.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F_Modificar_Merchandising.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F_Modificar_Merchandising.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F_Modificar_Merchandising.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F_Modificar_Merchandising().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton btnCancelar;
    private static javax.swing.JButton btnModificar;
    private rojeru_san.componentes.RSDateChooser calendar_fecha;
    private javax.swing.JComboBox<String> cmb_Concepto;
    private static javax.swing.JLabel labelTitulo;
    private static javax.swing.JLabel label_numRef;
    private static javax.swing.JLabel lblCantidad;
    private static javax.swing.JLabel lblConcepto;
    private static javax.swing.JLabel lblFecha;
    private static javax.swing.JLabel lblPedido;
    private static javax.swing.JLabel lblRef;
    private static javax.swing.JLabel lblTotal;
    private static javax.swing.JPanel panelContenedor;
    private static javax.swing.JPanel panelFondo;
    private javax.swing.JSpinner spn_Cantidad;
    private javax.swing.JSpinner spn_numPed;
    private javax.swing.JSpinner spn_precioTotal;
    // End of variables declaration//GEN-END:variables

    public void cargarDatos(int numRef) { //consulta a la base de datos con el NUM_REF de la celda seleccionada en la tabla del registro
        cargarComboBoxConcepto();
        ConexionBaseDatos.ConexionBaseDatos();
        Connection conexion = ConexionBaseDatos.getConnection();
        Statement sentencia;
        try {
            sentencia = conexion.createStatement();
            String sql;
            sql = "SELECT * FROM REGISTRO_MERCHANDISING WHERE NUM_REF = " + numRef;
            ResultSet resul = sentencia.executeQuery(sql);
            Registro_Merchan registro = null;
            while (resul.next()) {
                registro = new Registro_Merchan(resul.getInt(1), resul.getInt(2), resul.getDate(3), resul.getString(4), resul.getInt(5), resul.getFloat(6));
            }
            numRef = registro.getNum_ref();
            label_numRef.setText(Integer.toString(numRef));
            spn_numPed.setValue(registro.getRef_pedido());
            calendar_fecha.setDatoFecha(registro.getFechaReal());
            cmb_Concepto.setSelectedItem(registro.getConcepto());
            spn_Cantidad.setValue(registro.getCantidad());
            spn_precioTotal.setValue(registro.getPreciTotal());
        } catch (SQLException ex) {
            Logger.getLogger(F_Historico_Visitantes.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Error al tratar de conectar con la base de datos desde el modificador de merchandising");
        }

        ConexionBaseDatos.desconexionBaseDatos();
    }

    public void cargarComboBoxConcepto() {
        try {
            //reseteamos la lista y los ítems del combo box
            listaMerchan = new ArrayList<>();
            cmb_Concepto.removeAllItems();

            ConexionBaseDatos.ConexionBaseDatos();
            Connection conexion = ConexionBaseDatos.getConnection();
            Statement sentencia = conexion.createStatement();
            String sql;
            sql = "SELECT * FROM MERCHANDISING";
            ResultSet resul = sentencia.executeQuery(sql);
            //Recorremos el resulSet introducinedo todo en nuestro Array del comboBox
            while (resul.next()) {
                listaMerchan.add(resul.getString(1));
            }
            resul.close();
            sentencia.close();
            //conexion.close(); lo cerramos a continuación desde la clase
            ConexionBaseDatos.desconexionBaseDatos();

        } catch (SQLException ex) {
            System.out.println("Error al conectar a la base de datos desde el método cargarComboBoxMerchan");
            Logger.getLogger(F_Base.class.getName()).log(Level.SEVERE, null, ex);
        }

        cmb_Concepto.removeAllItems();
        for (String element : listaMerchan) {
            System.out.println("tipos entradas cargados: " + element);
            cmb_Concepto.addItem(element);
        }

    }

    public static void establecerColor() {
        ColorInterfaz.dimeColores();
        Color colorFondo = ColorInterfaz.dimeColores()[0];
        Color colorBotones = ColorInterfaz.dimeColores()[1];
        Color colorTexto = ColorInterfaz.dimeColores()[2];

        //Paneles de fondo
        panelFondo.setBackground(colorFondo);
        panelContenedor.setBackground(colorFondo);
        //Botones
        btnModificar.setBackground(colorBotones);
        btnCancelar.setBackground(colorBotones);

        //Textos
        labelTitulo.setForeground(colorTexto);
        label_numRef.setForeground(colorTexto);
        lblRef.setForeground(colorTexto);
        lblPedido.setForeground(colorTexto);
        lblConcepto.setForeground(colorTexto);
        lblCantidad.setForeground(colorTexto);
        lblTotal.setForeground(colorTexto);
        lblFecha.setForeground(colorTexto);
        btnModificar.setForeground(colorTexto);
        btnCancelar.setForeground(colorTexto);
    }
}
